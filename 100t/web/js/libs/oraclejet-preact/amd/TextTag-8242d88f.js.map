{"version":3,"file":"TextTag-8242d88f.js","sources":["../../src/UNSAFE_SelectMultiple/TextTag.tsx"],"sourcesContent":["/**\n * @license\n * Copyright (c) %FIRST_YEAR% %CURRENT_YEAR%, Oracle and/or its affiliates.\n * Licensed under The Universal Permissive License (UPL), Version 1.0\n * as shown at https://oss.oracle.com/licenses/upl/\n * @ignore\n */\n\nimport { useCallback, useEffect, useId, useRef } from 'preact/hooks';\nimport { preventDefault } from '../PRIVATE_SelectCommon';\nimport { HiddenAccessible } from '../UNSAFE_HiddenAccessible';\nimport { IconButton } from '../UNSAFE_IconButton';\nimport { Text } from '../UNSAFE_Text';\nimport { CloseIcon } from '../PRIVATE_ThemedIcons/CloseIcon';\nimport { TabbableModeContext } from '../hooks/UNSAFE_useTabbableMode';\nimport { useTranslationBundle } from '../hooks/UNSAFE_useTranslationBundle';\nimport { BundleType } from '../resources/nls/bundle';\nimport { isBackspaceOrDelete } from '../utils/PRIVATE_keyboardUtils';\nimport { classNames } from '../utils/UNSAFE_classNames';\nimport { textTagStyles } from './themes/TextTagStyles.css';\n\n/**\n * Props for the TextTag component\n */\ntype Props<V> = {\n  /**\n   * The label for the text tag\n   */\n  children: string;\n\n  /**\n   * Specifies whether to show the remove icon\n   */\n  removeIcon?: 'always' | 'never';\n\n  /**\n   * Indicates whether the component is focused\n   */\n  isFocused?: boolean;\n\n  /**\n   * Specifies if the TextTag component is selected\n   */\n  isSelected?: boolean;\n\n  /**\n   * Callback to be invoked when Delete/Backspace is pressed\n   */\n  onRemoveAction?: (value: V) => void;\n\n  /**\n   * Callback to be invoked when clicking on the text tag\n   */\n  onSelect?: (value: V) => void;\n\n  /**\n   * Callback to be invoked when the remove icon is clicked\n   */\n  onRemoveIconClick?: (value: V) => void;\n\n  /**\n   * The value of the text tag\n   */\n  value: V;\n};\n\n/**\n * The component for rendering selectable/removable TextTag\n *\n * @param param0 The props for the TextTag component\n */\nexport function TextTag<V>({\n  children,\n  removeIcon = 'never',\n  isSelected = false,\n  onRemoveAction,\n  onSelect,\n  onRemoveIconClick,\n  isFocused,\n  value\n}: Props<V>) {\n  const translations = useTranslationBundle<BundleType>('@oracle/oraclejet-preact');\n  const spanRef = useRef<HTMLSpanElement>(null);\n  const navigationTextId = useId();\n\n  const rootClasses = classNames([textTagStyles.base, isSelected && textTagStyles.selected]);\n\n  const onRemoveActionCallback = useCallback(() => {\n    onRemoveAction?.(value);\n  }, [value, onRemoveAction]);\n  const onSelectCallback = useCallback(() => {\n    onSelect?.(value);\n  }, [value, onSelect]);\n  const onRemoveIconClickCallback = useCallback(() => {\n    onRemoveIconClick?.(value);\n  }, [value, onRemoveIconClick]);\n  const onKeyUp = useCallback(\n    (event: KeyboardEvent) => {\n      if (isBackspaceOrDelete(event)) {\n        onRemoveActionCallback();\n        return;\n      }\n    },\n    [onRemoveActionCallback]\n  );\n\n  useEffect(() => {\n    if (isFocused && isSelected) {\n      spanRef.current?.focus();\n      spanRef.current?.scrollIntoView({ block: 'nearest' });\n    }\n  }, [isFocused, isSelected]);\n\n  return (\n    <>\n      <span\n        ref={spanRef}\n        class={rootClasses}\n        tabIndex={-1}\n        onClick={onSelectCallback}\n        onKeyUp={onKeyUp}\n        // Kill mouse down event to prevent focus transfer done by the parent container.\n        // We will programmatically take back focus in response to the onClick event.\n        onMouseDown={preventDefault}\n        role=\"option\"\n        aria-describedby={navigationTextId}\n        aria-selected={isSelected ? 'true' : 'false'}>\n        <Text size=\"md\" variant=\"inherit\">\n          {children}\n        </Text>\n        {removeIcon === 'always' && (\n          <TabbableModeContext.Provider value={{ isTabbable: false }}>\n            <IconButton size=\"xs\" variant=\"ghost\" onAction={onRemoveIconClickCallback}>\n              <CloseIcon />\n            </IconButton>\n          </TabbableModeContext.Provider>\n        )}\n      </span>\n      <HiddenAccessible id={navigationTextId}>\n        {translations.selectMultiple_removeSelectedTagInstructionText()}\n      </HiddenAccessible>\n    </>\n  );\n}\n"],"names":["children","removeIcon","isSelected","onRemoveAction","onSelect","onRemoveIconClick","isFocused","value","translations","useTranslationBundle","spanRef","useRef","navigationTextId","useId","rootClasses","classNames","textTagStyles","base","selected","onRemoveActionCallback","useCallback","onSelectCallback","onRemoveIconClickCallback","onKeyUp","event","isBackspaceOrDelete","useEffect","current","focus","scrollIntoView","block","_jsxs","jsxs","ref","class","tabIndex","onClick","onMouseDown","preventDefault","role","_jsx","Text","size","variant","TabbableModeContext","Provider","isTabbable","jsx","IconButton","onAction","CloseIcon","HiddenAccessible","id","selectMultiple_removeSelectedTagInstructionText"],"mappings":"8gBAuEM,UAAqBA,SACzBA,EAAQC,WACRA,EAAa,QAAOC,WACpBA,GAAa,EAAKC,eAClBA,EAAcC,SACdA,EAAQC,kBACRA,EAAiBC,UACjBA,EAASC,MACTA,IAEA,MAAMC,EAAeC,uBAAiC,4BAChDC,EAAUC,SAAwB,MAClCC,EAAmBC,EAAAA,QAEnBC,EAAcC,EAAUA,WAAC,CAACC,EAAaA,cAACC,KAAMf,GAAcc,EAAAA,cAAcE,WAE1EC,EAAyBC,EAAAA,aAAY,KACzCjB,IAAiBI,EAAM,GACtB,CAACA,EAAOJ,IACLkB,EAAmBD,EAAAA,aAAY,KACnChB,IAAWG,EAAM,GAChB,CAACA,EAAOH,IACLkB,EAA4BF,EAAAA,aAAY,KAC5Cf,IAAoBE,EAAM,GACzB,CAACA,EAAOF,IACLkB,EAAUH,eACbI,IACKC,EAAAA,oBAAoBD,IACtBL,GAED,GAEH,CAACA,IAUH,OAPAO,EAAAA,WAAU,KACJpB,GAAaJ,IACfQ,EAAQiB,SAASC,QACjBlB,EAAQiB,SAASE,eAAe,CAAEC,MAAO,YAC1C,GACA,CAACxB,EAAWJ,IAGb6B,EAAAA,2BACEA,EACEC,KAAA,OAAA,CAAAC,IAAKvB,EACLwB,MAAOpB,EACPqB,UAAW,EACXC,QAASf,EACTE,QAASA,EAGTc,YAAaC,EAAAA,eACbC,KAAK,4BACa3B,EAAgB,gBACnBV,EAAa,OAAS,kBACrCsC,EAAAA,IAACC,EAAAA,KAAK,CAAAC,KAAK,KAAKC,QAAQ,mBACrB3C,IAEa,WAAfC,GACCuC,MAACI,EAAmBA,oBAACC,SAAS,CAAAtC,MAAO,CAAEuC,YAAY,GACjD9C,SAAAwC,EAAAO,IAACC,EAAUA,WAAC,CAAAN,KAAK,KAAKC,QAAQ,QAAQM,SAAU3B,EAC9CtB,SAAAwC,EAAAO,IAACG,EAASA,UAAA,CAAA,UAKlBV,EAAAO,IAACI,EAAgBA,iBAAC,CAAAC,GAAIxC,EAAgBZ,SACnCQ,EAAa6C,sDAItB"}